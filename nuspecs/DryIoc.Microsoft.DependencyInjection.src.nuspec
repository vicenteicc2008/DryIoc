<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>DryIoc.Microsoft.DependencyInjection.src</id>
    <version>6.2.0</version>
    <authors>Maksim Volkau</authors>
    <copyright>Copyright Â© 2013-2023 Maksim Volkau</copyright>
    <projectUrl>https://github.com/dadhi/DryIoc</projectUrl>
    <license type="expression">MIT</license>
    <icon>logo.png</icon>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>DryIoc adapter for Microsoft.Extensions.DependencyInjection</description>
    <tags>DryIoc;Dependency Injection;DI;IoC;Asp;AspNet;vNext;AspNetCore;NetCore</tags>
    <releaseNotes>
<![CDATA[
## v6.2.0

- updated DryIoc to v5.4.0
- added: NET 6.0, NET 7.0 and MS.Ext.DI.Abstractions 7.0 support
- fixed: #547 Blazor File Upload issue with Net 7 and MS DI Package
- fixed: #567 Using DryIoc causes Blazor to crash
 

## v6.1.1

- fixed: #555 Avoiding cloning the container that already has the MicrosoftDependencyInjectionRules and RegistrySharing.Share
- updated DryIoc to v5.3.3


## v6.1.0

- added: RegisterDesciptor overload with IfAlreadyRegistered and optional serviceKey argument
- fixed: Using the explicit IfAlreadyRegistered.AppendNotKeyed for default RegisterDesciptor in Populate and WithDependencyInjectionAdapter methods
- fixed: #520 WithDependencyInjectionAdapter / Populate do not work with Default IfAlreadyRegistered.Replace 

]]>
    </releaseNotes>
    <dependencies>
      <group>
        <dependency id="DryIoc" version="5.3.3" />
        <dependency id="Microsoft.Extensions.DependencyInjection.Abstractions" version="6.0.0" />
      </group>
    </dependencies>
    <contentFiles>
      <files include="cs/**/*.*" buildAction="Compile" />
    </contentFiles>
  </metadata>
  <files>
    <file src="..\LICENSE.txt" />
    <file src="..\nuspecs\DryIoc.snk" />
    <file src="..\logo\logo128.png" target="logo.png" />

    <!-- NetStandard2.0 -->
    <file src="..\src\DryIoc.Microsoft.DependencyInjection\DryIocAdapter.cs" target="contentFiles\cs\netstandard2.0\DryIoc.Microsoft.DependencyInjection" />

  </files>
</package>
